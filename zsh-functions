# run server on current dir
localserver() {
  port=8888
  if [ "$1" != "" ]; then
    port=$1
  fi

  ruby -run -e httpd . -p $port -b 0.0.0.0
}

# Sub arg1 with arg2 on current dir
sustituir() {
  egrep -rl "$1" * | xargs sed -i "s/$1/$2/g"
}

sustituir_en() {
  egrep -rl "$1" $3 | xargs sed -i "s/$1/$2/g"
}

# Limpiar temporales de vim
clean_vim_temps() {
  find . -name "*.sw[o|p]" | xargs rm
}

# cclimate() {
#   docker run --interactive --tty --rm --env CODECLIMATE_CODE="$PWD" \
#     -v $PWD:/code \
#     -v /var/run/docker.sock:/var/run/docker.sock \
#     -v /tmp/cc:/tmp/cc \
#     codeclimate/codeclimate analyze $1
# }

# Fetch and checkout to remote branch
gfco() {
  git fetch origin $1
  git checkout origin/$1
  git checkout -b $1
}

# Search in git dir and go
cr() { cd ~/git/$1; }
_cr() { _files -W ~/git -/; }
compdef _cr cr

# Search in git dir and go in splitted window
cs() { tmux split-window -v -c ~/git/$1; }
_cs() { _files -W ~/git -/; }
compdef _cs cs

# Rails test from path
t() { RAILS_ENV=test rails test test/$1; }
_t() { _files -W $PWD/test -/; }
compdef _t t

vr() { vim ~/tmp/$(date -u '+%Y'.'%m'.'%d'_'%H'.'%M'.'%S').rb }
vj() { vim ~/tmp/$(date -u '+%Y'.'%m'.'%d'_'%H'.'%M'.'%S').js }
